{"version":3,"sources":["webpack:///./src/app/manage-users/manage-users.module.ts","webpack:///./src/app/manage-users/manage-users.page.html","webpack:///./src/app/manage-users/manage-users.page.scss","webpack:///./src/app/manage-users/manage-users.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAES;AAEtD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAe;KAC3B;CACF,CAAC;AAWF;IAAA;IAAoC,CAAC;IAAxB,qBAAqB;QATjC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,kEAAe,CAAC;SAChC,CAAC;OACW,qBAAqB,CAAG;IAAD,4BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBlC,ieAAie,2PAA2P,qCAAqC,kFAAkF,aAAa,qDAAqD,wCAAwC,gEAAgE,0CAA0C,qqDAAqqD,gBAAgB,+BAA+B,gBAAgB,k6C;;;;;;;;;;;ACA3wF,yBAAyB,2BAA2B,EAAE,iBAAiB,mBAAmB,iBAAiB,EAAE,+CAA+C,uhB;;;;;;;;;;;;;;;;;;;ACA1G;AAEI;AACW;AASjE;IAOE,yBACU,WAAyB,EACzB,SAA0B;QAD1B,gBAAW,GAAX,WAAW,CAAc;QACzB,cAAS,GAAT,SAAS,CAAiB;QARpC,cAAS,GAAY,KAAK,CAAC;IASxB,CAAC;IAEJ,kCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAC9C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IAChD,CAAC;IAED,gCAAM,GAAN,UAAO,IAAW;QAChB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,gCAAM,GAAN,UAAO,IAAW;QAChB,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,gCAAM,GAAN,UAAO,IAAW;QAChB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,SAAS;aACX,MAAM,CAAC;YACN,MAAM,EAAE,QAAQ;YAChB,OAAO,EACL,sCAAsC;YACxC,OAAO,EAAE,CAAC,MAAM,CAAC;SAClB,CAAC;aACD,IAAI,CAAC,iBAAO;YACX,OAAO,CAAC,OAAO,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kCAAQ,GAAR,UAAS,KAAK,EAAE,IAAW,EAAE,WAA2B;QACtD,WAAW,CAAC,KAAK,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;IAED,oCAAU,GAAV;QACE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;IAlDU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,8GAAuC;;SAExC,CAAC;+EASuB,iEAAY;YACd,8DAAe;OATzB,eAAe,CAmD3B;IAAD,sBAAC;CAAA;AAnD2B","file":"manage-users-manage-users-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ManageUsersPage } from './manage-users.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ManageUsersPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ManageUsersPage]\n})\nexport class ManageUsersPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button menu=\\\"m1\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Manager Users</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <br>\\n  <ion-card-title text-center>Users List</ion-card-title>\\n  <ion-card-subtitle text-center>You can only edit patients by swiping</ion-card-subtitle>\\n  <br>\\n  <div *ngIf=\\\"(usersList$ | async) as list; else noUsers\\\">\\n    <ion-list *ngFor=\\\"let user of list\\\" lines=\\\"full\\\">\\n      <ion-item-sliding #slidingItem>\\n        <ion-item text-wrap  lines=\\\"inset\\\"\\n          ><ion-avatar\\n            ><ion-icon name=\\\"contact\\\" size=\\\"large\\\" color=\\\"{{user.type == 'p' ? 'secondary' : ''}}\\\"></ion-icon\\n          ></ion-avatar>\\n          <ion-label>\\n            <h5>{{ user.name }}</h5>\\n            <p>\\n              Room Number: {{ user.type == 'p' ? user.room : 'N/A' }}\\n            </p>\\n            <p>\\n              User Type: {{ user.type == 'p' ? 'Patient' : 'Nurse' }}\\n            </p>\\n            <div *ngIf=\\\"editState && userToEdit.id == user.id\\\">\\n              <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"update(user)\\\">\\n                <ion-list>\\n                  <ion-item>\\n                    <ion-input\\n                      type=\\\"string\\\"\\n                      ngModel\\n                      name=\\\"name\\\"\\n                      required\\n                      #uidCtrl=\\\"ngModel\\\"\\n                      [(ngModel)]=\\\"user.name\\\"\\n                    ></ion-input>\\n                  </ion-item>\\n                  <ion-item>\\n                    <ion-select\\n                      placeholder=\\\"Select Type\\\"\\n                      interface=\\\"popover\\\"\\n                      ngModel\\n                      name=\\\"type\\\"\\n                      required\\n                      #typeCtrl=\\\"ngModel\\\"\\n                      [(ngModel)]=\\\"user.type\\\"\\n                    >\\n                      <ion-select-option value=\\\"p\\\">Patient</ion-select-option>\\n                      <ion-select-option value=\\\"n\\\">Nurse</ion-select-option>\\n                    </ion-select>\\n                  </ion-item>\\n                  <ion-item *ngIf=\\\"typeCtrl.value == 'p'\\\">\\n                    <ion-select\\n                      placeholder=\\\"Select Room Number\\\"\\n                      interface=\\\"popover\\\"\\n                      ngModel\\n                      name=\\\"room\\\"\\n                      required\\n                      #roomCtrl=\\\"ngModel\\\"\\n                      [(ngModel)]=\\\"user.room\\\"\\n                    >\\n                      <ion-select-option\\n                        *ngFor=\\\"let room of roomsList$ | async\\\"\\n                        value=\\\"{{ room.roomNum }}\\\"\\n                        >{{ room.roomNum }}\\n                      </ion-select-option>\\n                    </ion-select>\\n                  </ion-item>\\n                  <ion-item>\\n                    <ion-button\\n                      type=\\\"submit\\\"\\n                      color=\\\"warning\\\"\\n                      expand=\\\"block\\\"\\n                      [disabled]=\\\"!f.valid\\\"\\n                      >Update User</ion-button\\n                    >\\n                    <ion-button (click)=\\\"clearState()\\\" color=\\\"dark\\\"\\n                      >Cancel</ion-button\\n                    >\\n                  </ion-item>\\n                </ion-list>\\n              </form>\\n            </div>\\n          </ion-label>\\n        </ion-item>\\n        <ion-item-options side=\\\"end\\\" *ngIf=\\\"user.type == 'p'\\\">\\n          <ion-item-option\\n            color=\\\"secondary\\\"\\n            (click)=\\\"editUser($event, user, slidingItem)\\\"\\n            size=\\\"small\\\"\\n          >\\n            <ion-icon name=\\\"create\\\" slot=\\\"icon-only\\\"></ion-icon>\\n          </ion-item-option>\\n          <ion-item-option color=\\\"danger\\\" (click)=\\\"delete(user)\\\">\\n            <ion-icon name=\\\"trash\\\" slot=\\\"icon-only\\\"></ion-icon>\\n          </ion-item-option>\\n        </ion-item-options>\\n      </ion-item-sliding>\\n    </ion-list>\\n  </div>\\n\\n  <ng-template #noUsers>\\n    <hr />\\n    <ion-spinner></ion-spinner>\\n    <h5 text-center>There are no users yet.</h5>\\n  </ng-template>\\n</ion-content>\\n\"","module.exports = \".list {\\n  margin: 4px !important; }\\n\\nion-spinner {\\n  display: block;\\n  margin: auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Wb2x1bWVzL2hkZDIvVWRlbXkgSW9uaWNfQW5ndWxhci9pb25pYzRfY291cnNlL1JlbC1wLWF0aW9uLXQtc2hpcC9zcmMvYXBwL21hbmFnZS11c2Vycy9tYW5hZ2UtdXNlcnMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksc0JBQXNCLEVBQUE7O0FBRzFCO0VBQ0ksY0FBYztFQUNkLFlBQVksRUFBQSIsImZpbGUiOiJzcmMvYXBwL21hbmFnZS11c2Vycy9tYW5hZ2UtdXNlcnMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxpc3Qge1xuICAgIG1hcmdpbjogNHB4ICFpbXBvcnRhbnQ7XG59XG5cbmlvbi1zcGlubmVyIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IGF1dG87XG4gIH0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Users } from '../users/users.model';\nimport { UsersService } from '../users/users.service';\nimport { IonItemSliding, AlertController } from '@ionic/angular';\nimport { Room } from '../users/room.model';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-manage-users',\n  templateUrl: './manage-users.page.html',\n  styleUrls: ['./manage-users.page.scss']\n})\nexport class ManageUsersPage implements OnInit {\n  editState: Boolean = false;\n  userToEdit: Users;\n\n  roomsList$: Observable<Room[]>;\n  usersList$: Observable<Users[]>;\n\n  constructor(\n    private userService: UsersService,\n    private alertCtrl: AlertController\n  ) {}\n\n  ngOnInit() {\n    this.usersList$ = this.userService.getUsers();\n    this.roomsList$ = this.userService.getRooms();\n  }\n\n  create(user: Users) {\n    this.userService.add(user);\n  }\n\n  update(user: Users) {\n    this.userService.updateAddedUser(user);\n    this.clearState();\n  }\n\n  delete(user: Users) {\n    this.clearState();\n    this.userService.deleteUser(user);\n    this.alertCtrl\n      .create({\n        header: 'Delete',\n        message:\n          'Patient record successfully deleted.',\n        buttons: ['Okay']\n      })\n      .then(alertEl => {\n        alertEl.present();\n      });\n  }\n\n  editUser(event, user: Users, itemSliding: IonItemSliding) {\n    itemSliding.close();\n    this.editState = true;\n    this.userToEdit = user;\n  }\n\n  clearState() {\n    this.editState = false;\n    this.userToEdit = null;\n  }\n}\n"],"sourceRoot":""}