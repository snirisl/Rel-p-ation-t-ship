{"version":3,"sources":["webpack:///./node_modules/tesseract.js/src/browser/index.js","webpack:///./node_modules/tesseract.js/src/common/circularize.js","webpack:///./node_modules/tesseract.js/src/common/job.js","webpack:///./node_modules/tesseract.js/src/index.js","webpack:///./src/app/users/image-picker/image-picker.component.html","webpack:///./src/app/users/image-picker/image-picker.component.scss","webpack:///./src/app/users/image-picker/image-picker.component.ts","webpack:///./src/app/users/users.module.ts","webpack:///./src/app/users/users.page.html","webpack:///./src/app/users/users.page.scss","webpack:///./src/app/users/users.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD,kBAAkB,mBAAO,CAAC,oEAAoB;AAC9C;AACA;;AAEA;;;AAGA;AACA;AACA,gFAAgF;AAChF;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,gCAAgC,SAAS,G;;AAEzC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,2BAA2B,SAAS,G;AACpC;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;;;;;;;;;;;ACxGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA,C;;;;;;;;;;;AC9DA,gBAAgB,mBAAO,CAAC,0EAAkB;;AAE1C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oB;AACA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","file":"users-users-module.js","sourcesContent":["var defaultOptions = {\n    // workerPath: 'https://cdn.jsdelivr.net/gh/naptha/tesseract.js@0.2.0/dist/worker.js',\n    corePath: 'https://cdn.jsdelivr.net/gh/naptha/tesseract.js-core@0.1.0/index.js',    \n    langPath: 'https://tessdata.projectnaptha.com/3.02/',\n}\n\nif (process.env.TESS_ENV === \"development\") {\n    console.debug('Using Development Configuration')\n    defaultOptions.workerPath = location.protocol + '//' + location.host + '/dist/worker.dev.js?nocache=' + Math.random().toString(36).slice(3)\n}else{\n    var version = require('../../package.json').version;\n    defaultOptions.workerPath = 'https://cdn.jsdelivr.net/gh/naptha/tesseract.js@' + version + '/dist/worker.js'\n}\n\nexports.defaultOptions = defaultOptions;\n\n\nexports.spawnWorker = function spawnWorker(instance, workerOptions){\n    if(Blob && URL){\n        var blob = new Blob(['importScripts(\"' + workerOptions.workerPath + '\");'], {\n            type: 'application/javascript'\n        });\n        var worker = new Worker(URL.createObjectURL(blob));\n    }else{\n        var worker = new Worker(workerOptions.workerPath)\n    }\n\n    worker.onmessage = function(e){\n        var packet = e.data;\n        instance._recv(packet)\n    }\n    return worker\n}\n\nexports.terminateWorker = function(instance){\n    instance.worker.terminate()\n}\n\nexports.sendPacket = function sendPacket(instance, packet){\n    loadImage(packet.payload.image, function(img){\n        packet.payload.image = img\n        instance.worker.postMessage(packet) \n    })\n}\n\n\nfunction loadImage(image, cb){\n    if(typeof image === 'string'){\n        if(/^\\#/.test(image)){\n            // element css selector\n            return loadImage(document.querySelector(image), cb)\n        }else if(/(blob|data)\\:/.test(image)){\n            // data url\n            var im = new Image\n            im.src = image;\n            im.onload = e => loadImage(im, cb);\n            im.onerror = e => { throw e; };\n            return\n        }else{\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', image, true)\n            xhr.responseType = \"blob\";\n            \n            xhr.onload = e => {\n                if (xhr.status >= 400){\n                  throw new Error('Fail to get image as Blob');\n                }else{\n                    loadImage(xhr.response, cb);\n                }\n            };\n            xhr.onerror = e => { throw e; }; \n            \n            xhr.send(null)\n            return\n        }\n    }else if(image instanceof File){\n        // files\n        var fr = new FileReader()\n        fr.onload = e => loadImage(fr.result, cb);\n        fr.onerror = e => { throw e; }; \n        fr.readAsDataURL(image)\n        return\n    }else if(image instanceof Blob){\n        return loadImage(URL.createObjectURL(image), cb)\n    }else if(image.getContext){\n        // canvas element\n        return loadImage(image.getContext('2d'), cb)\n    }else if(image.tagName == \"IMG\" || image.tagName == \"VIDEO\"){\n        // image element or video element\n        var c = document.createElement('canvas');\n        c.width  = image.naturalWidth  || image.videoWidth;\n        c.height = image.naturalHeight || image.videoHeight;\n        var ctx = c.getContext('2d');\n        ctx.drawImage(image, 0, 0);\n        return loadImage(ctx, cb)\n    }else if(image.getImageData){\n        // canvas context\n        var data = image.getImageData(0, 0, image.canvas.width, image.canvas.height);\n        return loadImage(data, cb)\n    }else{\n        return cb(image)\n    }\n    throw new Error('Missing return in loadImage cascade')\n\n}\n","// The result of dump.js is a big JSON tree\n// which can be easily serialized (for instance\n// to be sent from a webworker to the main app\n// or through Node's IPC), but we want\n// a (circular) DOM-like interface for walking\n// through the data. \n\nmodule.exports = function circularize(page){\n    page.paragraphs = []\n    page.lines = []\n    page.words = []\n    page.symbols = []\n\n    page.blocks.forEach(function(block){\n        block.page = page;\n\n        block.lines = []\n        block.words = []\n        block.symbols = []\n\n        block.paragraphs.forEach(function(para){\n            para.block = block;\n            para.page = page;\n\n            para.words = []\n            para.symbols = []\n            \n            para.lines.forEach(function(line){\n                line.paragraph = para;\n                line.block = block;\n                line.page = page;\n\n                line.symbols = []\n\n                line.words.forEach(function(word){\n                    word.line = line;\n                    word.paragraph = para;\n                    word.block = block;\n                    word.page = page;\n                    word.symbols.forEach(function(sym){\n                        sym.word = word;\n                        sym.line = line;\n                        sym.paragraph = para;\n                        sym.block = block;\n                        sym.page = page;\n                        \n                        sym.line.symbols.push(sym)\n                        sym.paragraph.symbols.push(sym)\n                        sym.block.symbols.push(sym)\n                        sym.page.symbols.push(sym)\n                    })\n                    word.paragraph.words.push(word)\n                    word.block.words.push(word)\n                    word.page.words.push(word)\n                })\n                line.block.lines.push(line)\n                line.page.lines.push(line)\n            })\n            para.page.paragraphs.push(para)\n        })\n    })\n    return page\n}","const adapter = require('../node/index.js')\n\nlet jobCounter = 0;\n\nmodule.exports = class TesseractJob {\n    constructor(instance){\n        this.id = 'Job-' + (++jobCounter) + '-' + Math.random().toString(16).slice(3, 8)\n\n        this._instance = instance;\n        this._resolve = []\n        this._reject = []\n        this._progress = []\n        this._finally = []\n    }\n\n    then(resolve, reject){\n        if(this._resolve.push){\n            this._resolve.push(resolve) \n        }else{\n            resolve(this._resolve)\n        }\n\n        if(reject) this.catch(reject);\n        return this;\n    }\n    catch(reject){\n        if(this._reject.push){\n            this._reject.push(reject) \n        }else{\n            reject(this._reject)\n        }\n        return this;\n    }\n    progress(fn){\n        this._progress.push(fn)\n        return this;\n    }\n    finally(fn) {\n        this._finally.push(fn)\n        return this;  \n    }\n    _send(action, payload){\n        adapter.sendPacket(this._instance, {\n            jobId: this.id,\n            action: action,\n            payload: payload\n        })\n    }\n\n    _handle(packet){\n        var data = packet.data;\n        let runFinallyCbs = false;\n\n        if(packet.status === 'resolve'){\n            if(this._resolve.length === 0) console.log(data);\n            this._resolve.forEach(fn => {\n                var ret = fn(data);\n                if(ret && typeof ret.then == 'function'){\n                    console.warn('TesseractJob instances do not chain like ES6 Promises. To convert it into a real promise, use Promise.resolve.')\n                }\n            })\n            this._resolve = data;\n            this._instance._dequeue()\n            runFinallyCbs = true;\n        }else if(packet.status === 'reject'){\n            if(this._reject.length === 0) console.error(data);\n            this._reject.forEach(fn => fn(data))\n            this._reject = data;\n            this._instance._dequeue()\n            runFinallyCbs = true;\n        }else if(packet.status === 'progress'){\n            this._progress.forEach(fn => fn(data))\n        }else{\n            console.warn('Message type unknown', packet.status)\n        }\n\n        if (runFinallyCbs) {\n            this._finally.forEach(fn => fn(data));\n        }\n    }\n}\n","const adapter = require('./node/index.js')\nconst circularize = require('./common/circularize.js')\nconst TesseractJob = require('./common/job');\nconst version = require('../package.json').version;\n\nconst create = function(workerOptions = {}){\n\tvar worker = new TesseractWorker(Object.assign({}, adapter.defaultOptions, workerOptions));\n\tworker.create = create;\n\tworker.version = version;\n\treturn worker;\n}\n\nclass TesseractWorker {\n\tconstructor(workerOptions){\n\t\tthis.worker = null;\n\t\tthis.workerOptions = workerOptions;\n\t\tthis._currentJob = null;\n\t\tthis._queue = [];\n\t}\n\n\trecognize(image, options = {}){\n\t\treturn this._delay(job => {\n\t\t\tif (typeof options === 'string') options = {lang: options}\n\t\t\toptions.lang = options.lang || 'eng';\n\n\t\t\tjob._send('recognize', { image, options, workerOptions: this.workerOptions });\n\t\t})\n\t}\n\tdetect(image, options = {}){\n\t\treturn this._delay(job => {\n\t\t\tjob._send('detect', { image, options, workerOptions: this.workerOptions });\n\t\t})\n\t}\n\n\tterminate(){\n\t\tif(this.worker) adapter.terminateWorker(this);\n\t\tthis.worker = null;\n\t\tthis._currentJob = null;\n\t\tthis._queue = [];\n\t}\n\n\t_delay(fn){\n\t\tif(!this.worker) this.worker = adapter.spawnWorker(this, this.workerOptions);\n\n\t\tvar job = new TesseractJob(this);\n\t\tthis._queue.push(e => {\n\t\t\tthis._queue.shift();\n\t\t\tthis._currentJob = job;\n\t\t\tfn(job);\n\t\t});\n\t\tif(!this._currentJob) this._dequeue();\n\t\treturn job;\n\t}\n\n\t_dequeue(){\n\t\tthis._currentJob = null;\n\t\tif(this._queue.length){\n\t\t\tthis._queue[0]();\n\t\t}\n\t}\n\n\t_recv(packet){\n        if(packet.status === 'resolve' && packet.action === 'recognize'){\n            packet.data = circularize(packet.data);\n        }\n\n\t\tif(this._currentJob.id === packet.jobId){\n\t\t\tthis._currentJob._handle(packet)\n\t\t} else {\n\t\t\tconsole.warn('Job ID ' + packet.jobId + ' not known.')\n\t\t}\n\t}\n}\n\nmodule.exports = create();\n","module.exports = \"<div>\\n  <ion-button color=\\\"secondary\\\" (click)=\\\"onPickImage()\\\" *ngIf=\\\"!selectedImage\\\" expand=\\\"block\\\">\\n    <ion-icon name=\\\"camera\\\" slot=\\\"start\\\"></ion-icon>\\n    <ion-label>Open Camera</ion-label>\\n  </ion-button>\\n</div>\\n<input\\n  type=\\\"file\\\"\\n  *ngIf=\\\"usePicker\\\"\\n  #filepicker\\n  (change)=\\\"onFileChosen($event)\\\"\\n/>\\n<ion-button\\n    (click)=\\\"recognizeImage()\\\"\\n    expand=\\\"block\\\"\\n    [disabled]=\\\"!selectedImage\\\"\\n    color=\\\"tertiary\\\"\\n    >Recognize Text</ion-button\\n  >\\n<ion-card *ngIf=\\\"imageText\\\">\\n    <ion-card-header>Image Text</ion-card-header>\\n    <ion-card-content>\\n      ID: {{ this.id }}, Name: {{ this.name }}\\n    </ion-card-content>\\n  </ion-card>\\n\"","module.exports = \".picker {\\n  width: 30rem;\\n  max-width: 80%;\\n  height: 20rem;\\n  max-height: 30vh;\\n  border: 1px solid var(--ion-color-primary);\\n  margin: auto;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center; }\\n\\n.image {\\n  width: 100%;\\n  height: 100%;\\n  -o-object-fit: cover;\\n     object-fit: cover; }\\n\\ninput[type='file'] {\\n  display: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Wb2x1bWVzL2hkZDIvVWRlbXkgSW9uaWNfQW5ndWxhci9pb25pYzRfY291cnNlL1JlbC1wLWF0aW9uLXQtc2hpcC9zcmMvYXBwL3VzZXJzL2ltYWdlLXBpY2tlci9pbWFnZS1waWNrZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0VBQ1osY0FBYztFQUNkLGFBQWE7RUFDYixnQkFBZ0I7RUFDaEIsMENBQTBDO0VBQzFDLFlBQVk7RUFDWixhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQixFQUFBOztBQUdyQjtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osb0JBQWlCO0tBQWpCLGlCQUFpQixFQUFBOztBQUduQjtFQUNFLGFBQWEsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL2ltYWdlLXBpY2tlci9pbWFnZS1waWNrZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucGlja2VyIHtcbiAgd2lkdGg6IDMwcmVtO1xuICBtYXgtd2lkdGg6IDgwJTtcbiAgaGVpZ2h0OiAyMHJlbTtcbiAgbWF4LWhlaWdodDogMzB2aDtcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpO1xuICBtYXJnaW46IGF1dG87XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uaW1hZ2Uge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBvYmplY3QtZml0OiBjb3Zlcjtcbn1cblxuaW5wdXRbdHlwZT0nZmlsZSddIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbiJdfQ== */\"","import {\n  Component,\n  OnInit,\n  Output,\n  EventEmitter,\n  ElementRef,\n  ViewChild\n} from '@angular/core';\nimport {\n  Plugins,\n  Capacitor,\n  CameraSource,\n  CameraResultType\n} from '@capacitor/core';\nimport { Platform, LoadingController } from '@ionic/angular';\nimport * as Tesseract from 'tesseract.js';\nimport { UsersService } from '../users.service';\n\n@Component({\n  selector: 'app-image-picker',\n  templateUrl: './image-picker.component.html',\n  styleUrls: ['./image-picker.component.scss']\n})\nexport class ImagePickerComponent implements OnInit {\n  @ViewChild('filepicker') filepickerRef: ElementRef<HTMLInputElement>;\n  @Output() imagePick = new EventEmitter<string | File>();\n  selectedImage: string;\n  usePicker = false;\n  imageText: string;\n  id: string;\n  name: string;\n\n  constructor(\n    private platform: Platform,\n    private loadingCtrl: LoadingController,\n    private usersService: UsersService\n  ) {}\n\n  ngOnInit() {\n    console.log('Mobile:', this.platform.is('mobile'));\n    console.log('Hybrid:', this.platform.is('hybrid'));\n    console.log('ios:', this.platform.is('ios'));\n    console.log('Android:', this.platform.is('android'));\n    console.log('Desktop:', this.platform.is('desktop'));\n    if (\n      (this.platform.is('mobile') && !this.platform.is('hybrid')) ||\n      this.platform.is('desktop')\n    ) {\n      this.usePicker = true;\n    }\n  }\n\n  onPickImage() {\n    if (!Capacitor.isPluginAvailable('Camera') || this.usePicker) {\n      this.filepickerRef.nativeElement.click();\n      return;\n    }\n    Plugins.Camera.getPhoto({\n      quality: 50,\n      source: CameraSource.Camera,\n      correctOrientation: true,\n      width: 200,\n      resultType: CameraResultType.Base64\n    })\n      .then(image => {\n        this.selectedImage = image.base64String;\n        this.imagePick.emit(image.base64String);\n      })\n      .catch(error => {\n        console.log(error);\n        return false;\n      });\n  }\n\n  onFileChosen(event: Event) {\n    const pickedFile = (event.target as HTMLInputElement).files[0];\n    if (!pickedFile) {\n      return;\n    }\n    const fr = new FileReader();\n    fr.onload = () => {\n      const dataUrl = fr.result.toString();\n      this.selectedImage = dataUrl;\n      this.imagePick.emit(pickedFile);\n    };\n    fr.readAsDataURL(pickedFile);\n  }\n\n  recognizeImage() {\n    this.loadingCtrl\n      .create({\n        keyboardClose: true,\n        message: 'Analysing Sticker...'\n      })\n      .then(loadingEl => {\n        loadingEl.present();\n        Tesseract.recognize(this.selectedImage)\n          .progress(message => {\n            console.log(message);\n          })\n          .catch(error => {\n            console.error(error);\n            loadingEl.dismiss();\n          })\n          .then(result => {\n            this.imageText = result.text;\n            console.log(this.imageText);\n          })\n          .finally(resultOrError => {\n            const splitString = this.imageText.split(/\\n/ig);\n            console.log(splitString);\n            this.id = splitString[1];\n            this.name = splitString[0];\n            this.usersService.formIdFromOCR = splitString[1];\n            this.usersService.formNameFromOCR = splitString[0];\n            loadingEl.dismiss();\n          });\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UsersPage } from './users.page';\nimport { ImagePickerComponent } from './image-picker/image-picker.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsersPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [UsersPage, ImagePickerComponent],\n  exports: [ImagePickerComponent],\n  entryComponents: [ImagePickerComponent]\n})\nexport class UsersPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button menu=\\\"m1\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Add a New User</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-list>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">ID (without opening 0)</ion-label>\\n              <ion-input\\n                type=\\\"string\\\"\\n                ngModel\\n                name=\\\"uid\\\"\\n                required\\n                #uidCtrl=\\\"ngModel\\\"\\n                [value]=\\\"this.usersService.formIdFromOCR\\\"\\n              ></ion-input>\\n            </ion-item>\\n            <ion-item *ngIf=\\\"!uidCtrl.valid && uidCtrl.touched\\\" lines=\\\"none\\\">\\n              <ion-label>\\n                Should be at least 8 characters long.\\n              </ion-label>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Name</ion-label>\\n              <ion-input\\n                type=\\\"text\\\"\\n                ngModel\\n                name=\\\"name\\\"\\n                required\\n                minlength=\\\"2\\\"\\n                #nameCtrl=\\\"ngModel\\\"\\n                [value]=\\\"this.usersService.formNameFromOCR\\\"\\n              ></ion-input>\\n            </ion-item>\\n            <ion-item *ngIf=\\\"!nameCtrl.valid && nameCtrl.touched\\\" lines=\\\"none\\\">\\n              <ion-label>\\n                Should be at least 2 characters long.\\n              </ion-label>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Type</ion-label>\\n              <ion-select\\n                placeholder=\\\"Select Type\\\"\\n                interface=\\\"popover\\\"\\n                ngModel\\n                name=\\\"type\\\"\\n                required\\n                #typeCtrl=\\\"ngModel\\\"\\n              >\\n                <ion-select-option value=\\\"p\\\">Patient</ion-select-option>\\n                <ion-select-option value=\\\"n\\\">Nurse</ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n            <ion-item *ngIf=\\\"!typeCtrl.valid && typeCtrl.touched\\\" lines=\\\"none\\\">\\n              <ion-label>\\n                You must choose a user type.\\n              </ion-label>\\n            </ion-item>\\n            <ion-item *ngIf=\\\"typeCtrl.value == 'p'\\\">\\n              <ion-label position=\\\"floating\\\">Room Number</ion-label>\\n              <ion-select\\n                placeholder=\\\"Select Room Number\\\"\\n                interface=\\\"popover\\\"\\n                ngModel\\n                name=\\\"room\\\"\\n                required\\n                #roomCtrl=\\\"ngModel\\\"\\n              >\\n                <ion-select-option\\n                  *ngFor=\\\"let room of roomsList\\\"\\n                  value=\\\"{{ room.roomNum }}\\\"\\n                  >{{ room.roomNum }}\\n                </ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n          </ion-list>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <div text-center>\\n            <ion-button\\n              type=\\\"submit\\\"\\n              color=\\\"primary\\\"\\n              expand=\\\"block\\\"\\n              [disabled]=\\\"!f.valid\\\"\\n            >\\n              Create\\n            </ion-button>\\n            <p text-center>OR</p>\\n            <ion-button (click)=\\\"changeOcrFlag()\\\" color=\\\"primary\\\" expand=\\\"block\\\">\\n              <ion-icon name=\\\"camera\\\"></ion-icon>\\n              Take a Picture of the Patient Sticker\\n            </ion-button>\\n          </div>\\n        </ion-col>\\n        <ion-col size-sm=\\\"3\\\" offset-sm=\\\"3\\\">\\n          <app-image-picker\\n            (imagePick)=\\\"onImagePicked($event)\\\" *ngIf=\\\"this.useOcrFlag\\\"\\n          ></app-image-picker>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VzZXJzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService, AuthResponseData } from '../auth/auth.service';\nimport { Router } from '@angular/router';\nimport { LoadingController, AlertController } from '@ionic/angular';\nimport { Observable, Subscription } from 'rxjs';\nimport { UsersService } from './users.service';\nimport { Users } from './users.model';\nimport { Room } from './room.model';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.page.html',\n  styleUrls: ['./users.page.scss']\n})\nexport class UsersPage implements OnInit, OnDestroy {\n  isLoading = false;\n  usersSub: Subscription;\n  usersList: Users[];\n  roomsList: Room[];\n\n  useOcrFlag: boolean;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private loadingCtrl: LoadingController,\n    private alertCtrl: AlertController,\n    public usersService: UsersService\n  ) {}\n\n  ngOnInit() {\n    this.usersSub = this.usersService.getUsers().subscribe(users => {\n      this.usersList = users;\n    });\n    this.usersService.getRooms().subscribe(rooms => {\n      this.roomsList = rooms;\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.usersSub) {\n      this.usersSub.unsubscribe();\n    }\n    this.useOcrFlag = false;\n  }\n\n  ionViewWillEnter() {\n    this.isLoading = true;\n    this.usersService.fetchUsers().subscribe(() => {\n      this.isLoading = false;\n    });\n  }\n\n  onSubmit(form: NgForm) {\n    if (!form.valid) {\n      return;\n    }\n    const uid = form.value.uid + '@test.com';\n    const password = form.value.uid;\n    const name = form.value.name;\n    const type = form.value.type;\n    const room = form.value.room ? form.value.room : '0';\n    this.createUser(uid, password, name, type, room);\n    form.reset();\n  }\n\n  createUser(\n    uid: string,\n    password: string,\n    name: string,\n    type: string,\n    room: string\n  ) {\n    let localId: string;\n    this.isLoading = true;\n    this.loadingCtrl\n      .create({ keyboardClose: true, message: 'Creating User...' })\n      .then(loadingEl => {\n        loadingEl.present();\n        let authObs: Observable<AuthResponseData>;\n        authObs = this.authService.signup(uid, password);\n        authObs.subscribe(\n          resData => {\n            localId = resData.localId;\n            this.isLoading = false;\n            loadingEl.dismiss();\n            const newAddedUser = new Users(uid, name, type, room, localId);\n            this.usersService.add(newAddedUser);\n            this.router.navigateByUrl('/requests/tabs/my-requests');\n          },\n          errRes => {\n            loadingEl.dismiss();\n            const code = errRes.error.error.message;\n            let message = 'Could not add user, please try again.';\n            if (code === 'EMAIL_EXISTS') {\n              message = 'This Id exists already!';\n            }\n            this.showAlert(message);\n          }\n        );\n      });\n  }\n\n  private showAlert(message: string) {\n    this.alertCtrl\n      .create({\n        header: 'User creation failed',\n        message: message,\n        buttons: ['Okay']\n      })\n      .then(alertEl => alertEl.present());\n  }\n\n  onImagePicked(imageData: string) {\n\n  }\n\n  changeOcrFlag() {\n    this.useOcrFlag = !this.useOcrFlag;\n  }\n}\n"],"sourceRoot":""}